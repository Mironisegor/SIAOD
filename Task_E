//Коровы - в стойла

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool canPlaceCows(const vector<int>& stalls, int distance, int cows) {
    int last_cow = stalls[0];
    int count = 1;
    for (int i = 1; i < stalls.size(); i++) {
        if (stalls[i] - last_cow >= distance) {
            last_cow = stalls[i];
            count++;
            if (count == cows)
                return true;
        }
    }
    return false;
}

int largestMinDistance(vector<int>& stalls, int cows) {
    int low = 1, high = stalls.back() - stalls[0], result = -1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (canPlaceCows(stalls, mid, cows)) {
            result = mid;
            low = mid + 1;
        }
        else {
            high = mid - 1;
        }
    }
    return result;
}

int main() {
    int N, K;
    cin >> N >> K;
    vector<int> stalls(N);
    for (int i = 0; i < N; i++) {
        cin >> stalls[i];
    }
    sort(stalls.begin(), stalls.end());
    int max_distance = largestMinDistance(stalls, K);
    cout << max_distance << endl;
    return 0;
}
